'use client'
import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew'
import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'
import RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked'
import 'bootstrap/dist/css/bootstrap.min.css'
import { Inter } from 'next/font/google'
import { useState } from 'react'
import { Container } from 'react-bootstrap'
import { ToastContainer } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'
import AppHeader from './components/AppHeader/app.header'
import AppFooter from './components/app.footer'
import { APP_BAR_HEIGHT, BOARD_BAR_HEIGHT, BOARD_CONTENT_HEIGHT, COLUMN_HEADER_HEIGHT, COLUMN_FOOTER_HEIGHT } from '@/app/theme'


const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}


export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const slides = [
    {
      url: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e',
    },
    {
      url: 'https://images.unsplash.com/photo-1551782450-a2132b4ba21d',
    },
    {
      url: 'https://images.unsplash.com/photo-1522770179533-24471fcdba45',
    },
  ];
  const [currentIndex, setCurrentIndex] = useState(0);
  const nextSlide = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % slides.length);
  };
  const prevSlide = () => {
    setCurrentIndex((prevIndex) => (prevIndex - 1 + slides.length) % slides.length);
  };

  const handleClick = (slideIndex: any) => {
    setCurrentIndex(slideIndex)
  }
  return (
    <html lang="en">
      <body className={inter.className} >
        <AppHeader />
        <div style={{ position: 'relative', backgroundImage: `url(${slides[currentIndex].url})`, height: BOARD_BAR_HEIGHT, width: '100%', backgroundSize: 'cover', overflow: 'hidden', objectFit: 'cover' }}>
          <div style={{
            position: "absolute",
            top: '50%',
            transform: 'translate(0, -50%)',
            left: '32px',
            fontSize: '45px',
            color: "#fff",
            zIndex: 1,
            cursor: 'pointer',
            width: '100%',
            objectFit: 'cover'
          }} onClick={nextSlide}>
            <ArrowBackIosNewIcon />
          </div>
          <div style={{
            position: "absolute",
            top: '50%',
            transform: 'translate(0, -50%)',
            right: '32px',
            fontSize: '45px',
            color: "#fff",
            zIndex: 1,
            cursor: 'pointer'
          }} onClick={prevSlide}>
            <ArrowForwardIosIcon />
          </div>
          <div style={{ display: 'flex', justifyContent: 'center', }}>
            {slides.map((slide, slideIndex) =>
              <div key={slideIndex} style={{ margin: '0 3px', cursor: 'pointer', fontSize: '12px' }} onClick={() =>
                handleClick(slideIndex)
              }>
                <RadioButtonUncheckedIcon className='fontSize small' style={{ height: 478 }} />
              </div>)}
          </div>
        </div>
        <Container style={{ minHeight: BOARD_CONTENT_HEIGHT }}>
          {children}
        </Container>
        <ToastContainer
          position="bottom-right"
          autoClose={5000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="light"
        />
        <AppFooter />
      </body>
    </html >
  )
}
